{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAoD;AACc;AACd;AACK;AACpB;AAErC,MAAMM,eAAe,GAAGA,CAAA,KAAM;EAC7B,MAAMC,WAAW,GAAGJ,0DAAS,CAAIK,MAAM,IAAM;IAC5C,OAAOA,MAAM,CAAE,aAAc,CAAC,CAACC,sBAAsB,CAAE,MAAO,CAAC,CAC7DC,UAAU;EACb,CAAE,CAAC;EAEH,MAAM;IAAEC;EAAS,CAAC,GAAGP,4DAAW,CAAE,aAAc,CAAC;EAEjD,OACCQ,oDAAA,CAACV,8DAAW;IACX,cAAaG,mDAAE,CAAE,QAAQ,EAAE,oBAAqB,CAAG;IACnDQ,KAAK,EAAGN,WAAa;IACrBO,QAAQ,EAAKD,KAAK,IAAM;MACvBF,QAAQ,CAAE;QAAEI,IAAI,EAAE;UAAEL,UAAU,EAAEG;QAAM;MAAE,CAAE,CAAC;IAC5C;EAAG,CACH,CAAC;AAEJ,CAAC;AAEDb,kEAAc,CAAE,YAAY,EAAE;EAC7BgB,MAAM,EAAEA,CAAA,KAAM;IACb,OACCJ,oDAAA,CAACX,4EAA0B;MAC1BgB,IAAI,EAAC,YAAY;MACjBC,KAAK,EAAGb,mDAAE,CAAE,oBAAoB,EAAE,oBAAqB;IAAG,GAE1DO,oDAAA,CAACN,eAAe,MAAE,CACS,CAAC;EAE/B;AACD,CAAE,CAAC;;;;;;;;;;;;;;;ACpCwD;AACtB;AAErCa,yEAAsB,CAAE,gBAAgB,EAAE;EACzCF,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAEb,mDAAE,CAAE,2BAA2B,EAAE,oBAAqB,CAAC;EAC9De,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACXC,QAAQ,EAAE;MACTC,QAAQ,EAAE;QACTC,OAAO,EAAE;UACRC,MAAM,EAAE,gBAAgB;UACxBC,IAAI,EAAE;YACLC,GAAG,EAAE;UACN;QACD;MACD;IACD;EACD;AACD,CAAE,CAAC;;;;;;;;;;ACnBH;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA;AACA;AACA;AAC0B;;AAE1B;AACA;AACA","sources":["webpack://block-bindings-api/./src/plugins/notice.js","webpack://block-bindings-api/./src/variations/notice.js","webpack://block-bindings-api/external window \"React\"","webpack://block-bindings-api/external window [\"wp\",\"blocks\"]","webpack://block-bindings-api/external window [\"wp\",\"components\"]","webpack://block-bindings-api/external window [\"wp\",\"data\"]","webpack://block-bindings-api/external window [\"wp\",\"editPost\"]","webpack://block-bindings-api/external window [\"wp\",\"i18n\"]","webpack://block-bindings-api/external window [\"wp\",\"plugins\"]","webpack://block-bindings-api/webpack/bootstrap","webpack://block-bindings-api/webpack/runtime/compat get default export","webpack://block-bindings-api/webpack/runtime/define property getters","webpack://block-bindings-api/webpack/runtime/hasOwnProperty shorthand","webpack://block-bindings-api/webpack/runtime/make namespace object","webpack://block-bindings-api/./src/index.js"],"sourcesContent":["import { registerPlugin } from '@wordpress/plugins';\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post';\nimport { TextControl } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\nconst NoticeMetaField = () => {\n\tconst noticeValue = useSelect( ( select ) => {\n\t\treturn select( 'core/editor' ).getEditedPostAttribute( 'meta' )\n\t\t\t.bba_notice;\n\t} );\n\n\tconst { editPost } = useDispatch( 'core/editor' );\n\n\treturn (\n\t\t<TextControl\n\t\t\taria-label={ __( 'Notice', 'block-bindings-api' ) }\n\t\t\tvalue={ noticeValue }\n\t\t\tonChange={ ( value ) => {\n\t\t\t\teditPost( { meta: { bba_notice: value } } );\n\t\t\t} }\n\t\t/>\n\t);\n};\n\nregisterPlugin( 'bba-notice', {\n\trender: () => {\n\t\treturn (\n\t\t\t<PluginDocumentSettingPanel\n\t\t\t\tname=\"bba-notice\"\n\t\t\t\ttitle={ __( 'Block Bindings API', 'block-bindings-api' ) }\n\t\t\t>\n\t\t\t\t<NoticeMetaField />\n\t\t\t</PluginDocumentSettingPanel>\n\t\t);\n\t},\n} );\n","import { registerBlockVariation } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\nregisterBlockVariation( 'core/paragraph', {\n\tname: 'bba-notice',\n\ttitle: __( 'Block Bindings API Notice', 'block-bindings-api' ),\n\ticon: 'book-alt',\n\tattributes: {\n\t\tmetadata: {\n\t\t\tbindings: {\n\t\t\t\tcontent: {\n\t\t\t\t\tsource: 'core/post-meta',\n\t\t\t\t\targs: {\n\t\t\t\t\t\tkey: 'bba_notice',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n} );\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Plugin\n */\nimport './plugins/notice';\n\n/**\n * Variations\n */\nimport './variations/notice';\n"],"names":["registerPlugin","PluginDocumentSettingPanel","TextControl","useSelect","useDispatch","__","NoticeMetaField","noticeValue","select","getEditedPostAttribute","bba_notice","editPost","createElement","value","onChange","meta","render","name","title","registerBlockVariation","icon","attributes","metadata","bindings","content","source","args","key"],"sourceRoot":""}